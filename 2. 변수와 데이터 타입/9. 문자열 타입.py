"""
*문자열 타입(text sequence types): str

문자열: 문자로 이루어진 데이터의 집합
1. 큰따옴표(" ")로 감싸기
2. 작은따옴표(' ')로 감싸기
3. 큰따옴표 3개(""" """)로 감싸기
4. 작은따옴표 3개(''' ''')로 감싸기
"""
print("파이썬")
print('Python')

print("묻고 '더블'로 가")
print('묻고 "더블"로 가')
print("-------")
#따옴표가 등장하는 순서에 따라 정확하게 사용해야함

"""
*여러 줄의 문자열 표현하기

큰따옴표나 작은따옴표 3개를 연속해서 사용하면 여러줄의 문자열을 그대로 표현 가능
"""
print("""나도 진짜 모르겠어
뭐할지 당장에 오늘도 내일도
매해 목표는 무조건 새 앨범""")

print('''I got that guap
바뀐 내 겨울 잠바
미안해 이제 사과해 그전에 죽인 산타는''')

print('다가올 내일을 향해 smile\n'
      '멈추기엔 시간이 아까워\n'
      '다모임 comin to town')
print("-------")
'''
줄바꿈 문자('\n'): 출력 시 문자열의 라인을 다음 라인으로 바꿔주는 역할
                   따옴표 3개를 사용하는 표현보다 좀 더 출력결과와 비슷한 형태로 코드 작성 가능
'''

"""
*문자열끼리의 연산

문자열끼리의 더하기(+) 연산: 두 문자열을 서로 연결
문자열과 정수의 곱하기(*) 연산: 해당 문자열을 정수배만큼 반복해서 연결
"""
i = "짱구는"
j = "못말려"

print(i + j)
print(j * 3)
print("-------")

"""
*문자열에서 문자 선택하기
"""
py = "열심히 하는 자에겐 성공이 올 것이다!"

print(py[0])    #열 #문자열의 첫번째 문자의 인덱스(index)는 0부터 시작
print(py[5])    #는 #1씩 증가, 띄어쓰기(white space)도 하나의 문자로 취급
print(py[-1])   #!  #음의 인덱스도 지원, 음의 인덱스는 문자열의 마지막 문자를 -1로 놓고 역순으로 증가
print(len(py))  #21
print("-------")
#파이썬에서는 한글과 영문자의 크기를 동일하게 취급

"""
*문자열 자르기
"""
py = "짬에서 나온 바이브가 그정도라면"

print(py[5])    #온
print(py[5:8])  #온 바, 콜론 앞쪽에 위치한 인덱스부터 콜론 뒤쪽에 위치한 인덱스 바로 앞 문자까지 반환
print(py[:5])   #짬에서 나
print(py[5:])   #온 바이브가 그정도라면
print("-------")
#콜론(:)기호를 사용하면 문자열의 일부분만을 자를 수 있음

"""
*특정 문자의 개수 및 위치

count() 함수: 해당 문자열에 인수로 전달받은 문자가 모두 몇 개 포함되어 있는지를 확인하여 반환
find(), index() 함수를 사용->전달받은 문자가 처음으로 등장하는 인덱스를 알 수 있음
"""
py = "python programming"

print(py.count('p'))

print(py.find('o'))
print(py.index('o'))
#동일하게 4로 출력

print(py.find('z'))  #해당 문자가 없으면 -1 반환
#print(py.index('z')) -> 프로그램을 강제 종료
print("-------")
#index() 함수는 해당 문자열에 문자가 포함되어 있는지 먼저 확인후 사용

"""
*문자열의 대소문자 변환

upper() 함수: 문자열의 모든 문자를 대문자로 변환
lower() 함수: 문자열의 모든 문자를 소문자로 변환
"""
py = "Maestro"

print(py.upper())
print(py.lower())

print(py)  #원본 문자열은 변하지 않음
print("-------")

"""
*문자열 변경하기

replace() 함수: 첫 번째 인수로 전달된 문자열을 찾아 두 번째 인수로 전달된 문자열로 변경
                첫 번째 인수로 전달된 문자열을 찾을 수 없으면 원본 문자열 그대로 반환
"""
py = "영화 샤잠은 너무 재밌어요!"

print(py.replace("샤잠", "아이언맨"))
print(py)
print("-------")

"""
*문자열 나누기

split() 함수: 전달받은 문자를 기준으로 해당 문자열을 여러 개의 부분 문자열로 나누어 리스트로 반환
"""
py = "과선배는 김진모 그는 네 사촌"

print(py.split(' '))  #띄어쓰기를 기준으로 나눔
print(py.split())  #인수를 넣지 않으면 공백(띄어쓰기, 탭 문자, 줄바꿈 문자 등)을 기준으로 나눔

print(py)
